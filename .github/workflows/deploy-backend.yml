name: Deploy TUTU-backend
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment
        options:
          - dev
          - qa
        required: true
      revision:
        description: Backend build GH Actions number
        required: true
        type: number

permissions:
  id-token: write
  contents: read
  packages: read

jobs:
  deploy-backend-dev:
    if: ${{ inputs.environment == 'dev' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/prepare-next-env
      - name: Configure AWS utility-role credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          role-to-assume: ${{ secrets.AWS_TUTU_UTILITY_ROLE_ARN }}
          role-session-name: tutu-frontend-download-build-zip
          aws-region: eu-west-1
      - name: Download build from s3
        working-directory: ./tutu-frontend
        env:
          bucket: ${{ secrets.CDK_FRONTEND_BUILDS_BUCKET_NAME }}
        run: |
          aws s3 cp --no-progress s3://"$bucket"/ga-${{inputs.revision}}.zip build.zip
          unzip build.zip
          cp -R .next/standalone/.next/server .next/server # OpenNext v3 needs server-files also in .next/server
      - name: Configure AWS dev-role credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          role-to-assume: ${{ secrets.AWS_TUTU_DEV_ROLE_ARN }}
          role-session-name: tutu-frontend-deploy-dev
          aws-region: eu-west-1
      - name: Deploy backend to ECS
        working-directory: ./tutu-infra
        env:
          SKIP_OPENNEXT_BUILD: true
        run: |
          npm ci --prefer-offline
          npm install -g aws-cdk
          cdk deploy TutuBackendEcsService --require-approval never -c "utility=${{ secrets.AWS_TUTU_UTILITY_ACCOUNT_ID }}" -c "environment=${{ inputs.environment }}" -c "revision=ga-${{ inputs.revision }}"
