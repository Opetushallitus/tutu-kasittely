name: TUTU-k√§sittely backend build workflow

on:
  workflow_dispatch:
  push:
#    paths:
#      - 'tutu-backend/**'
#      - '!**.md'

env:
  GITHUB_TOKEN: ${{ github.token }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  HUSKY: 0
  AWS_REGION: eu-west-1

permissions:
  id-token: write
  contents: read
  packages: read

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/prepare-scala-env
      - name: Run unit tests
        working-directory: ./tutu-backend
        run: ./mvnw test

  build-backend:
    needs: [test-backend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/prepare-scala-env
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          role-to-assume: ${{ secrets.AWS_TUTU_UTILITY_ROLE_ARN }}
          role-session-name: tutu-frontend-upload-zip
          aws-region: ${{ env.AWS_REGION }}
      - uses: docker/login-action@v3
        with:
          registry: ${{ secrets.AWS_TUTU_UTILITY_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
      - uses: docker/setup-buildx-action@v3
      - name: Build and upload image to ECR
        uses: docker/build-push-action@v6
        with:
          context: ./tutu-backend
          cache-from: type=registry,ref=${{ secrets.AWS_TUTU_UTILITY_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/tutu-backend-cache:cache
          cache-to: mode=max,image-manifest=true,oci-mediatypes=true,type=registry,ref=${{ secrets.AWS_TUTU_UTILITY_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/tutu-backend-cache:cache
          file: tutu-backend/Dockerfile
          push: true
          tags: ${{ secrets.AWS_TUTU_UTILITY_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/tutu-backend:ga-${{github.run_number}}
